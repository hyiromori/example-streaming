service: streaming
frameworkVersion: ">=1.60.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'prod'}
  region: ap-northeast-1
  memorySize: 128
  timeout: 10
  logRetentionInDays: 30
  deploymentBucket:
    name: hyiromori
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      # https://docs.aws.amazon.com/ja_jp/IAM/latest/UserGuide/list_amazons3.html
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - "arn:aws:s3:::${self:custom.s3.uploadBucket}"
      # - "arn:aws:s3:::${self:custom.s3.deliveryBucket}" # 今回は同じバケットなので使わない
    - Effect: Allow
      # https://docs.aws.amazon.com/ja_jp/IAM/latest/UserGuide/list_awselementalmediaconvert.html
      Action:
        - mediaconvert:CreateJob
        - mediaconvert:GetJob
      Resource: "arn:aws:mediaconvert:${self:provider.region}:#{AWS::AccountId}:jobs/*"

  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    UPLOAD_BUCKET: "${self:custom.s3.uploadBucket}"
    DELIVERY_BUCKET: "${self:custom.s3.deliveryBucket}"

plugins:
  - serverless-offline
  - serverless-pseudo-parameters

custom:
  s3:
    uploadBucket: streaming-cdn-347676319
    deliveryBucket: streaming-cdn-347676319
  serverless-offline:
    port: 4000

functions:
  index:
    handler: handler/api/index.handler
    events:
      - http:
          method: GET
          path: ''

  prepare:
    handler: handler/api/prepare.handler
    events:
      - http:
          method: GET
          path: 'prepare'

  convert_request:
    handler: handler/api/convert_request.handler
    events:
      - http:
          method: POST
          path: 'convert_request'
