service: streaming
frameworkVersion: ">=1.60.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ap-northeast-1
  memorySize: 128
  timeout: 10
  logRetentionInDays: 30
  deploymentBucket:
    name: hyiromori
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      # https://docs.aws.amazon.com/ja_jp/IAM/latest/UserGuide/list_amazons3.html
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - "arn:aws:s3:::${self:custom.s3_bucket}/*"
    - Effect: Allow
      # https://docs.aws.amazon.com/ja_jp/IAM/latest/UserGuide/list_awselementalmediaconvert.html
      Action:
        - mediaconvert:CreateJob
        - mediaconvert:GetJob
      Resource:
        - "arn:aws:mediaconvert:${self:provider.region}:#{AWS::AccountId}:jobs/*"
        - "arn:aws:mediaconvert:${self:provider.region}:#{AWS::AccountId}:queues/Default"
        - "arn:aws:mediaconvert:${self:provider.region}:#{AWS::AccountId}:jobTemplates/HLS_Template"
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource: "arn:aws:iam::#{AWS::AccountId}:role/MediaConvertRole"

  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    S3_BUCKET: ${self:custom.s3_bucket}
    MEDIACONVERT_ENDPOINT: ${self:custom.mediaconvert_endpoint}

plugins:
  - serverless-offline
  - serverless-pseudo-parameters

custom:
  s3_bucket: "example-video-distribution-${self:provider.stage}"
  mediaconvert_endpoint: "https://mpazqbhuc.mediaconvert.ap-northeast-1.amazonaws.com"
  serverless-offline:
    port: 4000

functions:
  index:
    handler: handler/api/index.handler
    events:
      - http:
          method: GET
          path: ''

  prepare:
    handler: handler/api/prepare.handler
    events:
      - http:
          method: GET
          path: 'prepare'

  convert_request:
    handler: handler/api/convert_request.handler
    events:
      - http:
          method: POST
          path: 'convert_request'

  status:
    handler: handler/api/status.handler
    events:
      - http:
          method: GET
          path: 'status/{id}'
